S: S stat| 
;


/*program : LET [ declarations ] IN command sequence END;
declarations : declarations type ident_decl;
ident_decl : [ id_seq ] IDENTIFIER;
id_seq : id_seq IDENTIFIER;
*/
stat: command;

//svako pojavljivanje command se mijenja sa command_sequence
command : T_SKIP;
    | T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence T_ELSE command_sequence T_FI ;
    | T_WHILE expression T_DO command_sequence T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;

command_sequence : command_sequence | command |;




//bez konflikata
S: stat 
;

stat: stat command|
;

/*program : LET [ declarations ] IN command sequence END;
declarations : declarations type ident_decl;
ident_decl : [ id_seq ] IDENTIFIER;
id_seq : id_seq IDENTIFIER;
*/


//svako pojavljivanje command se mijenja sa command_sequence
command : T_SKIP;
    | T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence T_ELSE command_sequence T_FI ;
    | T_WHILE expression T_DO command_sequence T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;

command_sequence : stat;



//OVO FULL RADI

S: program 
;

program: T_LET declarations T_IN stat T_END 
    |T_LET T_IN stat T_END
;


declarations :type ident_decl
    |declarations type ident_decl;

ident_decl : T_ID
    | ident_decl T_ID;

/*
    | id_seq T_ID
;
id_seq : id_seq T_ID;*/


stat: stat command|
;

//svako pojavljivanje command se mijenja sa command_sequence
command : T_SKIP;
    | T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence T_ELSE command_sequence T_FI ;
    | T_WHILE expression T_DO command_sequence T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;

command_sequence : stat;


expression :
    expression T_ASSIGN expression
    | expression T_OR expression
    | expression T_AND expression
    |expression T_NEQ expression 
    |expression T_EQ expression 
    | expression T_GREATER expression
    | expression T_LESSEQ expression
    | expression T_GREATEREQ expression
    | expression T_LESS expression
    
    | expression T_PLUS expression | expression T_MINUS expression
    | expression T_STAR expression | expression T_SLASH expression
    | T_NOT expression
    | T_LPAREN expression T_RPAREN
    | constant | T_ID 
   
;
constant : T_DEC
     | T_DOU | T_BOOLCONST | T_STRCONST;
type : T_INT | T_DOUBLE | T_BOOL | T_STRING;



//OVO JE DA PROBAM DA DOZVOLIM SKIP SAMO U WHILE
S: program 
;

program: T_LET declarations T_IN stat T_END 
    |T_LET T_IN stat T_END
;


declarations :type ident_decl
    |declarations type ident_decl;

ident_decl : T_ID
    | ident_decl T_ID;

/*
    | id_seq T_ID
;
id_seq : id_seq T_ID;*/


stat: stat command|
;

//svako pojavljivanje command se mijenja sa command_sequence
command :
     T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence1 T_ELSE command_sequence1 T_FI ;
    | T_WHILE expression T_DO command_sequence1 T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;

command_sequence : stat;

stat1: stat1 command1|;

command1 : T_SKIP;
    | T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence1 T_ELSE command_sequence1 T_FI ;
    | T_WHILE expression T_DO command_sequence1 T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;

command_sequence1 : stat1;

expression :
    expression T_ASSIGN expression
    | expression T_OR expression
    | expression T_AND expression
    |expression T_NEQ expression 
    |expression T_EQ expression 
    | expression T_GREATER expression
    | expression T_LESSEQ expression
    | expression T_GREATEREQ expression
    | expression T_LESS expression
    
    | expression T_PLUS expression | expression T_MINUS expression
    | expression T_STAR expression | expression T_SLASH expression
    | T_NOT expression
    | T_LPAREN expression T_RPAREN
    | constant | T_ID 
   
;
constant : T_DEC
     | T_DOU | T_BOOLCONST | T_STRCONST;
type : T_INT | T_DOUBLE | T_BOOL | T_STRING;





//OVO ZADNJE FULL RADI
S: program 
;

program: T_LET declarations T_IN stat T_END 
    |T_LET T_IN stat T_END
;


declarations :type ident_decl
    |declarations type ident_decl;

ident_decl : T_ID
    | ident_decl T_ID;

/*
    | id_seq T_ID
;
id_seq : id_seq T_ID;*/


stat: stat command|
;

//svako pojavljivanje command se mijenja sa command_sequence
command :
     T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence1 T_ELSE command_sequence1 T_FI ;
    | T_WHILE expression T_DO command_sequence1 T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;



stat1: stat1 command1|;

command1 : T_SKIP;
    | T_ID T_ASSIGN expression ;
    | T_IF expression T_THEN command_sequence1 T_ELSE command_sequence1 T_FI ;
    | T_WHILE expression T_DO command_sequence1 T_END ;
    | T_READ T_ID;
    | T_WRITE expression ;

command_sequence1 : stat1;

expression :
    expression T_ASSIGN expression
    | expression T_OR expression
    | expression T_AND expression
    |expression T_NEQ expression 
    |expression T_EQ expression 
    | expression T_GREATER expression
    | expression T_LESSEQ expression
    | expression T_GREATEREQ expression
    | expression T_LESS expression
    
    | expression T_PLUS expression | expression T_MINUS expression
    | expression T_STAR expression | expression T_SLASH expression
    | T_NOT expression
    | T_LPAREN expression T_RPAREN
    | constant | T_ID 
   
;
constant : T_DEC
     | T_DOU | T_BOOLCONST | T_STRCONST;
type : T_INT | T_DOUBLE | T_BOOL | T_STRING;





//JOS BOLJI KOD
S: program 
;

program: T_LET declarations T_IN stat T_END 
    |T_LET T_IN stat T_END
;


declarations :type ident_decl
    |declarations type ident_decl;

ident_decl : T_ID
    | ident_decl T_ID;




stat: stat command|
;


command :
     T_ID T_ASSIGN expression T_SEMICOLON
    | T_IF expression T_THEN command_sequence1 T_ELSE command_sequence1 T_FI 
    | T_WHILE expression T_DO command_sequence1 T_END 
    | T_READ T_ID T_SEMICOLON
    | T_WRITE expression T_SEMICOLON
    | type T_FUNCTION T_ID T_PARAMETER declarations T_IN command_sequence T_RETURN expression T_SEMICOLON T_FUNCTIONEND
    | T_FUNCTION T_ID T_PARAMETER declarations T_IN command_sequence T_FUNCTIONEND;



stat1: stat1 command1|;

command1 : T_SKIP
    | T_ID T_ASSIGN expression T_SEMICOLON
    | T_IF expression T_THEN command_sequence1 T_ELSE command_sequence1 T_FI 
    | T_WHILE expression T_DO command_sequence1 T_END 
    | T_READ T_ID T_SEMICOLON
    | T_WRITE expression T_SEMICOLON
    | type T_FUNCTION T_ID T_PARAMETER declarations T_IN command_sequence T_RETURN expression T_SEMICOLON T_FUNCTIONEND
    | T_FUNCTION T_ID T_PARAMETER declarations T_IN command_sequence T_FUNCTIONEND;


command_sequence1 : stat1;
command_sequence: stat;

expression :
    expression T_ASSIGN expression
    | expression T_OR expression
    | expression T_AND expression
    |expression T_NEQ expression 
    |expression T_EQ expression 
    | expression T_GREATER expression
    | expression T_LESSEQ expression
    | expression T_GREATEREQ expression
    | expression T_LESS expression
    
    | expression T_PLUS expression | expression T_MINUS expression
    | expression T_STAR expression | expression T_SLASH expression
    | T_NOT expression
    | T_LPAREN expression T_RPAREN
    | constant | T_ID | T_ID T_PARAMETER ident_decl T_SEMICOLON
   
;
constant : T_DEC
     | T_DOU | T_BOOLCONST | T_STRCONST;
type : T_INT | T_DOUBLE | T_BOOL | T_STRING;
